{"version":3,"sources":["index.d.ts"],"names":["PureComponent","BigList","BigListItem","BigListSection"],"mappings":"AAAA;AACA,SAAgBA,aAAhB,QAAqC,OAArC;AAiFA,eAAe,MAAMC,OAAN,SAAmCD,aAAnC,CAEb;AASF,OAAO,MAAME,WAAN,SAA0BF,aAA1B,CAA0D;AAUjE,OAAO,MAAMG,cAAN,SAA6BH,aAA7B,CAAgE","sourcesContent":["/* eslint-disable no-undef */\nimport React, { PureComponent } from \"react\";\nimport {\n  Animated,\n  FlatListProps,\n  ListRenderItemInfo,\n  ListViewProps,\n  NativeScrollEvent,\n  NativeSyntheticEvent,\n  ScrollViewProps,\n  ViewStyle,\n} from \"react-native\";\n\nexport type BigListRenderItemInfo<ItemT> = ListRenderItemInfo<ItemT> & {\n  section?: number;\n  key?: string;\n  style?: ViewStyle | ViewStyle[];\n};\n\nexport type BigListRenderItem<ItemT> = (\n  info: BigListRenderItemInfo<ItemT>,\n) => React.ReactElement | null;\n\ninterface BigListProps<ItemT>\n  extends ScrollViewProps,\n    Pick<\n      FlatListProps<ItemT>,\n      | \"ListEmptyComponent\"\n      | \"ListFooterComponent\"\n      | \"ListFooterComponentStyle\"\n      | \"ListHeaderComponent\"\n      | \"ListHeaderComponentStyle\"\n      | \"getItemLayout\"\n      | \"numColumns\"\n      | \"keyExtractor\"\n      | \"onEndReached\"\n      | \"onEndReachedThreshold\"\n      | \"onRefresh\"\n      | \"onViewableItemsChanged\"\n      | \"columnWrapperStyle\"\n      | \"refreshing\"\n      | \"initialScrollIndex\"\n      | \"removeClippedSubviews\"\n    >,\n    Pick<\n      ListViewProps,\n      \"renderFooter\" | \"renderHeader\" | \"stickySectionHeadersEnabled\"\n    > {\n  inverted?: boolean | null | undefined;\n  actionSheetScrollRef?: any | null | undefined;\n  batchSizeThreshold?: number | null | undefined;\n  data?: ItemT[];\n  placeholder?: boolean;\n  placeholderImage?: any;\n  placeholderComponent?: React.ReactNode;\n  footerHeight?: string | number | (() => number);\n  headerHeight?: string | number | (() => number);\n  hideMarginalsOnEmpty?: boolean | null | undefined;\n  hideHeaderOnEmpty?: boolean | null | undefined;\n  hideFooterOnEmpty?: boolean | null | undefined;\n  insetBottom?: number;\n  insetTop?: number;\n  itemHeight:\n    | string\n    | number\n    | ((section: number) => number)\n    | ((section: number, index: number) => number);\n  onScrollEnd?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n  renderAccessory?: (list: React.ReactNode) => React.ReactNode;\n  renderScrollViewWrapper?: (element: React.ReactNode) => React.ReactNode;\n  renderEmpty?: () => React.ReactNode | null | undefined;\n  renderItem: BigListRenderItem<ItemT> | null | undefined;\n  controlItemRender?: boolean;\n  renderSectionHeader?: (section: number) => React.ReactNode | null | undefined;\n  renderSectionFooter?: (section: number) => React.ReactNode | null | undefined;\n  sectionFooterHeight?: string | number | ((section: number) => number);\n  sectionHeaderHeight?: string | number | ((section: number) => number);\n  sections?: ItemT[][] | null | undefined;\n  stickySectionHeadersEnabled?: boolean;\n  children?: null | undefined;\n  ScrollViewComponent?: React.ComponentType<ScrollViewProps> | React.Component<ScrollViewProps>;\n}\nexport default class BigList<ItemT = any> extends PureComponent<\n  BigListProps<ItemT>\n> {}\n\ntype BigListItemProps = {\n  children?: React.ReactNode[] | React.ReactNode;\n  height?: number | string;\n  width?: number | string;\n  style?: ViewStyle | ViewStyle[];\n};\n\nexport class BigListItem extends PureComponent<BigListItemProps> {}\n\ntype BigListSectionProps = {\n  children?: React.ReactNode[] | React.ReactNode;\n  height?: number;\n  nextSectionPosition?: number;\n  position?: number;\n  initialScrollIndex: string | number | Animated.Value;\n};\n\nexport class BigListSection extends PureComponent<BigListSectionProps> {}\n"]}